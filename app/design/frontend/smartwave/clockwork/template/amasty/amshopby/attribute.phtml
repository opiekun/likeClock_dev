<?php
/**
 * @author Amasty Team
 * @copyright Copyright (c) 2017 Amasty (https://www.amasty.com)
 * @package Amasty_Shopby
 */
?>
<?php
/**
 * @var $this Amasty_Shopby_Block_Catalog_Layer_Filter_Attribute
 */
?><ol class="
<?php if ($this->getCollapsed() && !$this->getHasSelection()): ?>no-display-current <?php endif ?>

<?php
/** Custom code added by 121eCommerce  */
$swatchableAttributes = array('size');
$isSwatch = in_array($this->getFilter()->getAttributeModel()->getAttributeCode(), $swatchableAttributes);
?>

<?php
if($this->getSingleChoice()) {echo " single-choice ";}?>
<?php
if ($this->getSortFeaturedFirst() && in_array($this->getDisplayType(), array(Amasty_Shopby_Model_Source_Attribute::DT_LABELS_ONLY, Amasty_Shopby_Model_Source_Attribute::DT_IMAGES_AND_LABELS))):
    ?>sort-featured-first-<?php echo $this->getRequestValue(); endif ?>
">
    <?php if ($this->getSortFeaturedFirst()): ?><input type="hidden" id="field_sort_featured_<?php echo $this->getRequestValue();?>" value="default_sort"><?php endif ?>
    <?php
    switch ($this->getDisplayType()){
        case Amasty_Shopby_Model_Source_Attribute::DT_LABELS_ONLY:
            $isBrandFilter = $this->getRequestValue() == 'brand';

            if ($this->getShowSearch()){
                echo '<li rel="search"><input type="text" class="amshopby_attr_search input-text" onkeyup="amshopby_attr_search(this)" /></li>';
            }

            $showToggle = false;

            foreach ($this->getItemsAsArray() as $index => $item){
                if($isBrandFilter && $index > 11 && !$showToggle){
                    $showToggle = true;

                    echo '<div id="toggle-brand" style="display: none" >';
                }

                $item['css'] .= ($isSwatch) ? ' swatch-label' : '';
                echo
                    '<li'.
                    ($isSwatch ? ' class="swatch-item"' : '') .
                    (isset($item['style']) ? ' '.$item['style'] : '') .
                    (isset($item['default_sort']) ? ' data-default_sort="' . $item['default_sort'] . '"': '') .
                    (isset($item['featured_sort']) ? ' data-featured_sort="' . $item['featured_sort'] . '"': '') .
                    ' data-text="' . htmlspecialchars($item['label']) . '"> ' .
                    '<a class="'.$item['css'].'"' . $item['rel'] . ' href="'.$item['url'].'"   data-config=\''.$item['data-config'].'\' >'. $item['label'] . $item['count'] . '</a>' .
                    '</li>';
            }
            if($showToggle){
                echo '</div>';
                echo '<li><button class="amshopby-attr button-as-text" id="toggle-brand-link">Show more brands</button></li>';
            } ;

            break;

        case Amasty_Shopby_Model_Source_Attribute::DT_IMAGES_ONLY:
            echo '<li>';
            foreach ($this->getItemsAsArray() as $item){
                if (isset($item['image_hover']) && $item['image_hover'] != '') {
                    echo '<img src="' . $item['image_hover'] . '" style="display: none;" />';
                    $onHover = 'onmouseover=this.src="' . $item['image_hover'] . '"';
                    $onHover .= ' onmouseout=this.src="' . $item['image'] . '"';
                } else {
                    $onHover = '';
                }
                echo '<a '.$item['style'].$item['rel'].' class="'.$item['css'].'" href="'.$item['url'].'" data-config=\' '.$item['data-config'].'\' ><img src="'.$item['image'].'" ' . $onHover . ' title="'. $item['label'] .'" alt="'. $item['label'] .'"></a>';

            }
            echo '</li>';
            break;

        case Amasty_Shopby_Model_Source_Attribute::DT_IMAGES_AND_LABELS:
            if ($this->getShowSearch()){
                echo '<li rel="search"><input type="text" class="amshopby_attr_search" /></li>';
            }
            foreach ($this->getItemsAsArray() as $item){
                echo '<li '.$item['style'].
                    (isset($item['default_sort']) ? ' data-default_sort="' . $item['default_sort'] . '"': '') .
                    (isset($item['featured_sort']) ? ' data-featured_sort="' . $item['featured_sort'] . '"': '') .
                    ' data-text="' . htmlspecialchars($item['label']) . '"><a class="'.$item['css'].'" '.$item['rel'].' href="'.$item['url'].'" data-config=\' '.$item['data-config'].'\' >';

                if (isset($item['image_hover']) && $item['image_hover'] != '') {
                    echo '<img src="' . $item['image_hover'] . '" style="display: none;" />';
                    $onHover = 'onmouseover=this.src="' . $item['image_hover'] . '"';
                    $onHover .= ' onmouseout=this.src="' . $item['image'] . '"';
                } else {
                    $onHover = '';
                }

                if (!empty($item['image'])){
                    echo '<img src="'.$item['image'].'" ' . $onHover . ' title="'. $item['label'] .'" alt="'. $item['label'] .'">';
                }
                echo $item['label'] . $item['count'] . '</a>' . '</li>';
            }
            break;

        case Amasty_Shopby_Model_Source_Attribute::DT_DROPDOWN:
            echo '<li><select onchange="if (this.value) window.location.href = this.value" class="amshopby-select amshopby-ajax-select">';
            echo '<option value="'.$this->getRemoveUrl().'" data-config=\' '.$this->getRemoveOptionConfig().' \'>'.Mage::helper('amshopby')->__('Please Select ...').'</option>';
            foreach ($this->getItemsAsArray() as $item){
                echo '<option '.$item['css'] . $item['rel'] . ' value="'.$item['url'].'" data-config=\' '.$item['data-config'].'\'>'. $item['label'] . $item['count'] . '</option>';
            }
            echo '</select></li>';
            break;

        case Amasty_Shopby_Model_Source_Attribute::DT_LABELS_IN_2_COLUMNS:
            $items = $this->getItemsAsArray();
            $size  = sizeof($items);
            $half  =  ceil($size/2);

            echo '<li>';
            echo '<div class="amshopby-column">';
            for ($i=0; $i<$half; $i++){
                $item = $items[$i];
                echo '<a class="'.$item['css'].'" '.$item['rel'].' href="'.$item['url'].'" data-text="' . htmlspecialchars($item['label']) . '" data-config=\' '.$item['data-config'].'\' >'. $item['label'] . $item['count'] . '</a>' . '<br/>';
            }
            echo '</div>';
            echo '<div class="amshopby-column">';
            for ($i=$half; $i<$size; $i++){
                $item = $items[$i];
                echo '<a class="'.$item['css'].'" '.$item['rel'].' href="'.$item['url'].'" data-text="' . htmlspecialchars($item['label']) . '" data-config=\' '.$item['data-config'].'\'   >'. $item['label'] . $item['count'] . '</a>' . '<br/>';
            }
            echo '</div>';
            echo '</li>';
            break;
    }

    if ($this->getShowLessMore() && in_array($this->getDisplayType(), array(
            Amasty_Shopby_Model_Source_Attribute::DT_LABELS_ONLY,
            Amasty_Shopby_Model_Source_Attribute::DT_IMAGES_ONLY,
            Amasty_Shopby_Model_Source_Attribute::DT_IMAGES_AND_LABELS,
        ))) {

        $total = count($this->getItemsAsArray());
        $short = $this->getMaxOptions();
        $add = $total - $short;
        if ($add > 0) {
            $text = sprintf($this->__('View %d More'), $add);
            echo '<li class="amshopby-clearer"><a id="amshopby-more-'.$this->getRequestValue().'" class="amshopby-more" href="#">' . $text . '</a></li>';
        }
        echo '<li class="amshopby-clearer"><a id="amshopby-less-'.$this->getRequestValue().'" class="amshopby-less" href="#" style="display:none">' . $this->__('Show Less') . '</a></li>';
    }
    ?>
</ol>

<script type="text/javascript">

    jQuery(document).ready (function () {
        if (window.location.href.indexOf('showBrands') > 0) {
            displayMoreBrands();
        }
    });

    // Functionality added based on axof: 10072 ticket by 121eCommerce
    jQuery( "#toggle-brand-link" ).click(function() {

        updateQueryStringParam('showBrands', 1);
        displayMoreBrands();

    });

    function displayMoreBrands()
    {
        jQuery("#toggle-brand").show();
        jQuery("#toggle-brand-link").remove();
        jQuery('.amshopby-attr').each(function (i, o) {
            var link = jQuery(o).attr('href');
            jQuery(o).attr('href', link + "&showBrands=1");
        });
    }

    function updateQueryStringParam(key, value) {
        baseUrl = [location.protocol, '//', location.host, location.pathname].join('');
        urlQueryString = document.location.search;
        var newParam = key + '=' + value,
            params = '?' + newParam;

        // If the "search" string exists, then build params from it
        if (urlQueryString) {
            keyRegex = new RegExp('([\?&])' + key + '[^&]*');
            // If param exists already, update it
            if (urlQueryString.match(keyRegex) !== null) {
                params = urlQueryString.replace(keyRegex, "$1" + newParam);
            } else { // Otherwise, add it to end of query string
                params = urlQueryString + '&' + newParam;
            }
        }
        window.history.replaceState({}, "", baseUrl + params);
    }
</script>